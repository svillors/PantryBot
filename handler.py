from aiogram import types
from keyboard import create_order_keyboard, choose_type_keyboard, approve_order
from aiogram.fsm.context import FSMContext
from state import CreateOrder
from helpers import get_chat_id
import datetime

async def start_handler(message:types.Message,state:FSMContext):
    await get_chat_id(message.from_user.id, message.from_user.full_name)
    await state.clear()
    text = """–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç –∞—Ä–µ–Ω–¥—ã —Å–∫–ª–∞–¥—Å–∫–∏—Ö –ø–æ–º–µ—â–µ–Ω–∏–π!

–ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –±—ã—Å—Ç—Ä–æ –∏ —É–¥–æ–±–Ω–æ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–µ—â–µ–π –Ω–∞ –ª—é–±–æ–π —Å—Ä–æ–∫.

üìå –ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç?
üîπ –ê—Ä–µ–Ω–¥–∞ —Å–∫–ª–∞–¥–∞ ‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–º–µ—Ä —è—á–µ–π–∫–∏ –∏ —Å—Ä–æ–∫ —Ö—Ä–∞–Ω–µ–Ω–∏—è.
üîπ –ì–∏–±–∫–∏–µ —É—Å–ª–æ–≤–∏—è ‚Äî –∞—Ä–µ–Ω–¥—É–π—Ç–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–Ω–∏, –Ω–µ–¥–µ–ª–∏ –∏–ª–∏ –º–µ—Å—è—Ü—ã.
üîπ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ‚Äî –±–æ—Ç –Ω–∞–ø–æ–º–Ω–∏—Ç –≤–∞–º –æ —Å—Ä–æ–∫–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ö—Ä–∞–Ω–µ–Ω–∏—è.
üöÄ –ù–∞—á–Ω–∏—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å ‚Äî –Ω–∞–∂–º–∏—Ç–µ ¬´–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑¬ª!

–° –ø—Ä–∞–≤–∏–ª–∞–º–∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –ø–æ —Å—Å—ã–ª–∫–µ:
https://docs.google.com/document/d/1TSUO4U56FNMGfAysA5fqNY6ZsRPj14lRqEP955W1-YA/edit?usp=sharing

–ü—Ä–æ–¥–æ–ª–∂–∞—è, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:
https://docs.google.com/document/d/1wy-ziowpBP8PFV6AIu893FKTDr4o6Hv7bBnBrTz6Mrk/edit?usp=sharing"""
    await message.answer(text, reply_markup=create_order_keyboard())


async def create_order(message:types.Message,state:FSMContext):
    await message.delete()
    await state.set_state(CreateOrder.choose_type)
    await message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ–ø—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞",reply_markup=choose_type_keyboard())


async def fill_contact(message:types.Message,state:FSMContext):
    await message.delete()
    await state.set_state(CreateOrder.appove_order)
    state_data = await state.get_data()
    date_first = datetime.datetime(year=state_data['year_first'],
                                   month=state_data['month_first'],
                                   day=state_data['day_first'])
    date_last = datetime.datetime(year=state_data['year_last'],
                                  month=state_data['month_last'],
                                  day=state_data['day_last'])
    day_count = (date_last - date_first).days
    result_data = (
        f"–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è: {state_data['year_first']}.{state_data['month_first']}.{state_data['day_first']}\n"
        f"–î–∞—Ç–∞ –∫–æ–Ω—Ü–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è: {state_data['year_last']}.{state_data['month_last']}.{'day_last'}\n"
        f"–û–±—â–∞—è —Å—É–º–º–∞: {state_data['price'] * day_count} —Ä.\n"
        f"–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {message.text}"
    )
    await state.update_data({'contact': message.text})
    await message.answer("–ó–∞–≤–µ—Ä—à–∏—Ç–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ\n–î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞:\n" + result_data,reply_markup=approve_order())
